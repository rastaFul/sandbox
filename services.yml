version: "3.8"
x-logging: &default-logging
  options:
    max-size: '10m'
    max-file: '1'
  driver: json-file
services:
  portainer:
    image: portainer/portainer-ce:${PORTAINER_TAG}
    container_name: portainer
    restart: on-failure
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/volumes/portainer:/data
    logging: *default-logging
  mysql:
    image: mysql:${MYSQL_TAG}
    container_name: mysql
    command: mysqld --sql_mode='NO_ENGINE_SUBSTITUTION'
    restart: on-failure
    ports:
        - 3306:3306
    env_file:
      - .mysql.env
    volumes:
      - /var/volumes/mysql:/var/lib/mysql
    logging: *default-logging    
  mongo:
    image: mongo:${MONGO_TAG}
    container_name: mongo
    command: sh -c "mongod --bind_ip_all --profile 1 --slowms 60000 --slowOpSampleRate 1.0"
    restart: on-failure
    environment:
      - MONGO_DATA_DIR=/data/db
    ports:
      - 27017:27017     
    volumes:
      - /var/volumes/mongodb:/data/db
    logging: *default-logging
  redis:
    image: redis:${REDIS_TAG}
    container_name: redis
    restart: on-failure
    volumes:
      - /var/volumes/redis:/data
    ports:
      - 6379:6379
    logging: *default-logging
  redisinsight:
    image: redislabs/redisinsight:${REDIS_INSIGHT_TAG}
    container_name: redisinsight
    restart: on-failure
    volumes:
      - /var/volumes/redisinsight:/db
    ports:
      - 8001:8001
    logging: *default-logging
    links: 
      - redis
  rabbitmq:
      image: rabbitmq:${RABBITMQ_TAG}
      container_name: rabbitmq
      ports:
          - 15672:15672
          - 5672:5672
          - 15693:15692
      volumes:
          - /var/volumes/rabbitmq:/var/lib/rabbitmq
      env_file:
        - .rabbitmq.env
      logging: *default-logging
  prometheus:
      image: prom/prometheus:${PROMETHEUS_TAG}
      container_name: prometheus
      ports:
          - 9090:9090
      volumes:
          - ./prometheus.yml:/etc/prometheus/prometheus.yml
      logging: *default-logging
  grafana:
      image: grafana/grafana:${GRAFANA_TAG}
      container_name: grafana
      ports:
          - 3000:3000
      logging: *default-logging      
  elasticsearch:
    container_name: elasticsearch
    build:
      context: ./elasticsearch
    volumes:
      - /var/volumes/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  localstack:
    container_name: "${LOCALSTACK_CONTAINER_NAME-localstack}"
    image: localstack/localstack:${LOCALSTACK_TAG-latest}
    ports:
      - 127.0.0.1:4510-4559:4510-4559  # external service port range
      - 127.0.0.1:4566:4566            # LocalStack Edge Proxy
    environment:
      - DEBUG=${DEBUG-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - HOST_TMP_FOLDER=${TMPDIR:-/var/volumes}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    env_file: 
      - .localstack.env
    volumes:
      - "${TMPDIR:-/var/volumes}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"      
  nginx:
      container_name: nginx
      build:
          context: ./nginx
      ports:
          - 80:80
          - 443:443
networks:    
  default: 
    name: services
    driver: bridge
